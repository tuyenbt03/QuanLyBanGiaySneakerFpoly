/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Hang;
import service.HangService;

/**
 *
 * @author PC
 */
public class jplHang extends javax.swing.JFrame {

    private HangService service = new HangService();

    private DefaultTableModel dtm;
    private DefaultTableModel dtm2;
    private List<String> listMaHang = service.listMaHang();
    private List<String> listTenHang = service.listTenHang();

    private List<Hang> listSP = new ArrayList<>();
   jplSanPham hang;
    public jplHang(jplSanPham sp) {
        initComponents();
        this.setLocationRelativeTo(null);
        dtm = (DefaultTableModel) this.tblHangConHoatDong.getModel();
        dtm2 = (DefaultTableModel) tblHangNgungHoatDong.getModel();
        this.loadTableSCL();
        loadTableNgungHoatDong();
        this.clear();
        this.hang = sp;
    }

    private void loadTableSCL() {
        ArrayList<Hang> list = (ArrayList<Hang>) this.service.getAllConHangDong();
        dtm.setRowCount(0);
        for (Hang sp : list) {
            dtm.addRow(new Object[]{
                sp.getMaHang(),
                sp.getTenHang(),
                sp.getNgayTao(),
                sp.getNgaySua(),
                sp.getTrangThai() == 1 ? "Còn hàng" : "Hết hàng"
            });
        }
    }

    private void loadTableNgungHoatDong() {
        ArrayList<Hang> lstNgungHoatDong = service.getAllNgungHoatDong();
        dtm2.setRowCount(0);
        for (Hang hang : lstNgungHoatDong) {
            dtm2.addRow(new Object[]{
                hang.getMaHang(), hang.getTenHang(), hang.getNgayTao(), hang.getNgaySua(), hang.getTrangThai() == 1 ? "Còn hàng" : "Hết hàng"

            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaHang = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTenHang = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSuaSP = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnThayDoiTrangthai = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        rdoConCL = new javax.swing.JRadioButton();
        rdoHetCL = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHangConHoatDong = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHangNgungHoatDong = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin Hãng"));

        jLabel1.setText("Mã Hãng");

        jLabel2.setText("Tên Hãng");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSuaSP.setText("Sửa");
        btnSuaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnThayDoiTrangthai.setText("Đổi trạng thái");
        btnThayDoiTrangthai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThayDoiTrangthaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuaSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThayDoiTrangthai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnThem)
                .addGap(18, 18, 18)
                .addComponent(btnSuaSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLamMoi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(btnThayDoiTrangthai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel5.setText("Trạng thái");

        buttonGroup1.add(rdoConCL);
        rdoConCL.setSelected(true);
        rdoConCL.setText("Hoạt động");

        buttonGroup1.add(rdoHetCL);
        rdoHetCL.setText("Không hoạt động");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaHang, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenHang, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdoConCL, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(rdoHetCL)))
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 100, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rdoConCL))
                .addGap(8, 8, 8)
                .addComponent(rdoHetCL)
                .addGap(61, 61, 61))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Lọc Hãng"));

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel6.setText("Tìm kiếm theo tên Hãng: ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblHangConHoatDong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Hãng", "Tên Hãng", "Ngày Tạo", "Ngày Sửa", "Trạng Thái"
            }
        ));
        tblHangConHoatDong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHangConHoatDongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHangConHoatDong);

        jTabbedPane1.addTab("Còn hàng", jScrollPane1);

        tblHangNgungHoatDong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã hãng", "Tên hãng", "Ngày tạo", "Ngày sửa", "Trạng thái"
            }
        ));
        tblHangNgungHoatDong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHangNgungHoatDongMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblHangNgungHoatDongMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tblHangNgungHoatDong);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 259, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hết hàng", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (checkTrongSP()) {
            if (checkMaSP()) {
                if (checkTenSP()) {
                    UUID id = UUID.randomUUID();
                    String maSP = this.txtMaHang.getText();
                    String tenSP = this.txtTenHang.getText();
                    int trangThai = 1;
                    if (rdoHetCL.isSelected()) {
                        trangThai = 0;
                    }

                    Hang sp = new Hang(String.valueOf(id), maSP, tenSP, trangThai);

                    boolean a = this.service.insert(sp);

                    if (a == true) {
                        JOptionPane.showMessageDialog(this, "Thêm thành công");
                    } else {
                        JOptionPane.showMessageDialog(this, "Thêm thất bại");
                        return;
                    }
                    this.clear();
                    this.loadTableSCL();
                    hang.loadCbb();
                }
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPActionPerformed
        int index = tblHangConHoatDong.getSelectedRow();
        if (index >= 0) {
            listSP = service.getAllConHangDong();
            int trangThai = 1;
            if (rdoHetCL.isSelected()) {
                trangThai = 0;
            }
            String ma = txtMaHang.getText();
            String ten = txtTenHang.getText();

            Hang sp = new Hang();
            sp.setMaHang(ma);
            sp.setTenHang(ten);
            sp.setTrangThai(trangThai);
            if (ma.equalsIgnoreCase(sp.getMaHang()) && ten.equalsIgnoreCase(sp.getTenHang())) {
                if (checkTrongSP()) {
                    service.update(sp);
                    this.loadTableSCL();
                    JOptionPane.showMessageDialog(this, "Sủa thành công");
                    hang.loadCbb();

                } else {
                    JOptionPane.showMessageDialog(this, "Không được để trống");

                }
            } else if (!ma.equalsIgnoreCase(sp.getMaHang())) {
                if (checkTrongSP()) {
                    if (checkMaSP()) {
                        service.update(sp);
                        this.loadTableSCL();
                        JOptionPane.showMessageDialog(this, "Sủa thành công");
                        hang.loadCbb();

                    } else {
                        JOptionPane.showMessageDialog(this, "Mã sản phẩm bị trùng");
                    }
                }
            } else if (!ten.equalsIgnoreCase(sp.getTenHang())) {
                if (checkTrongSP()) {
                    if (checkTenSP()) {
                        service.update(sp);
                        this.loadTableSCL();
                        JOptionPane.showMessageDialog(this, "Sủa thành công");
                        hang.loadCbb();

                    } else {
                        JOptionPane.showMessageDialog(this, "Tên sản phẩm bị trùng");

                    }
                }
            } else {
                if (checkTrongSP()) {
                    if (checkMaSP()) {
                        if (checkTenSP()) {
                            service.update(sp);
                            this.loadTableSCL();
                            hang.loadCbb();
                        }
                    }
                }
            }
        } else
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần sửa!");
    }//GEN-LAST:event_btnSuaSPActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        this.clear();
        loadTableSCL();
        loadTableNgungHoatDong();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void tblHangConHoatDongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHangConHoatDongMouseClicked
        int index = tblHangConHoatDong.getSelectedRow();
        clickVaoBang(index);
    }//GEN-LAST:event_tblHangConHoatDongMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String tenHang = txtTimKiem.getText().trim();
        if (!tenHang.equals("")) {
            listSP = service.timKiem(tenHang);
            showDataTablePT(listSP);
        } else {
            clear();
            loadTableSCL();
            loadTableNgungHoatDong();
        }

    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void tblHangNgungHoatDongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHangNgungHoatDongMouseClicked
        // TODO add your handling code here:
        ArrayList<Hang> lstNgungHoatDong = service.getAllNgungHoatDong();
        int selectedRow = tblHangNgungHoatDong.getSelectedRow();
        if (selectedRow >= 0 && selectedRow <= lstNgungHoatDong.size()) {
            String idChoice = lstNgungHoatDong.get(selectedRow).getId();
            for (Hang hang : lstNgungHoatDong) {
                if (hang.getId().equals(idChoice)) {
                    txtMaHang.setText(hang.getMaHang());
                    txtTenHang.setText(hang.getTenHang());
                    rdoHetCL.setSelected(true);
                }
            }
        }

    }//GEN-LAST:event_tblHangNgungHoatDongMouseClicked

    private void tblHangNgungHoatDongMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHangNgungHoatDongMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblHangNgungHoatDongMouseEntered

    private void btnThayDoiTrangthaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThayDoiTrangthaiActionPerformed
        // TODO add your handling code here:
        List<Hang> lstHoatDong = service.getAllConHangDong();
        int selectedtRow1 = tblHangConHoatDong.getSelectedRow();
        ArrayList<Hang> lstNgungHoatDong = service.getAllNgungHoatDong();
        int selectedRow2 = tblHangNgungHoatDong.getSelectedRow();

        if (selectedtRow1 >= 0) {
            if (selectedtRow1 >= 0 && selectedRow2 < lstHoatDong.size()) {
                String idChoice = lstHoatDong.get(selectedtRow1).getId();
                // Sử dụng idChoice ở đây
                service.updateTrangThai(idChoice);
            } else {
                JOptionPane.showMessageDialog(this, "Bạn phải chọn dòng");
            }
        } else if (selectedRow2 >= 0) {
            if (selectedRow2 >= 0 && selectedRow2 < lstNgungHoatDong.size()) {
                String idChoice = lstNgungHoatDong.get(selectedRow2).getId();
                // Sử dụng idChoice ở đây
                service.updateTrangThai(idChoice);
            } else {
                JOptionPane.showMessageDialog(this, "Bạn phải chọn dòng");
            }
        }
        clear();
        loadTableNgungHoatDong();
        loadTableSCL();
    }//GEN-LAST:event_btnThayDoiTrangthaiActionPerformed

    public void showDataTablePT(List<Hang> lists) {
        ArrayList<Hang> lstHangConHang = new ArrayList<>();
        ArrayList<Hang> lstHangHetHang = new ArrayList<>();
        dtm.setRowCount(0);
        dtm2.setRowCount(0);
        for (Hang list : lists) {
            if (list.getTrangThai() == 1) {
                lstHangConHang.add(list);
            } else {
                lstHangHetHang.add(list);
            }
        }
        for (Hang hang : lstHangConHang) {
            dtm.addRow(hang.toDataRow());
        }
        for (Hang hang2 : lstHangHetHang) {
            dtm2.addRow(hang2.toDataRow());
        }

    }

    public void clickVaoBang(int index) {
        listSP = service.getAllConHangDong();
        Hang sp = listSP.get(index);

        txtMaHang.setText(sp.getMaHang());
        txtTenHang.setText(sp.getTenHang());
        if (sp.getTrangThai() == 1) {
            rdoConCL.setSelected(true);
        } else {
            rdoHetCL.setSelected(true);
        }
    }

    public boolean checkTrongSP() {
        if (txtMaHang.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã không được để trống!");
            return false;
        } else if (txtTenHang.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên không được để trống!");
            return false;
        } else {
            return true;
        }
    }

    public boolean checkMaSP() {
        String ma = txtMaHang.getText().trim();
        for (String s : listMaHang) {
            if (ma.equalsIgnoreCase(s)) {
                JOptionPane.showMessageDialog(this, "Mã đã tồn tại!");
                return false;
            }
        }
        return true;
    }

    public boolean checkTenSP() {
        String ten = txtMaHang.getText().trim();
        for (String s : listTenHang) {
            if (ten.equalsIgnoreCase(s)) {
                JOptionPane.showMessageDialog(this, "Tên đã tồn tại!");
                return false;
            }
        }
        return true;
    }

    private void clear() {

        this.txtMaHang.setText("");
        this.txtTenHang.setText("");

    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(jplHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(jplHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(jplHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(jplHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new jplHang().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSuaSP;
    private javax.swing.JButton btnThayDoiTrangthai;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdoConCL;
    private javax.swing.JRadioButton rdoHetCL;
    private javax.swing.JTable tblHangConHoatDong;
    private javax.swing.JTable tblHangNgungHoatDong;
    private javax.swing.JTextField txtMaHang;
    private javax.swing.JTextField txtTenHang;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
